<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Sidebar</title>
        <!-- Add Font Awesome CDN -->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    </head>
<body>
    <nav class="sidebar">
        <ul>
            <li><a href="/dashboard">Home</a></li>
            <li>
                <a href="javascript:void(0)" class="expandable">Transaction <span class="arrow">â–¼</span></a>
                <ul class="submenu">
                    <li><a href="/in">In</a></li>
                    <li><a href="/out">Out</a></li>
                    <li><a href="/transfer">Transfer</a></li>
                </ul>
            </li>
            <li><a href="/adjustment">Adjustment</a></li>
            <li><a href="/alert">Alert</a></li>
            <li>
                <a href="javascript:void(0)" class="expandable">Edit <span class="arrow">â–¼</span></a>
                <ul class="submenu">
                    <li><a href="/editHistory">History</a></li>
                    <li><a href="/editName">Name</a></li>
                </ul>
            </li>
            <li><a href="/report">Report</a></li>
            <li><a href="/profile">Profile</a></li>
            <li><a href="/logout">Logout</a></li>
        </ul>
    </nav>

    <!-- Moved topbar.ejs content here -->
    <nav class="top-bar">
        <span class="username"></span>
        <div class="icons">
            <a href="javascript:void(0)" class="icon-link notification-container" onclick="toggleNotifications()">
                <i class="fas fa-bell notification-icon"></i>
                <span id="notificationDot" class="notification-dot"></span> <!-- Keep it inside -->
                <div id="notificationPopup" class="notification-popup"></div>
            </a>
            
            
            <div id="notificationDropdown" class="notification-dropdown">
                <p id="notificationMessage">Checking notifications...</p>
                <a id="viewAlerts" href="/reportlist/reportalert" class="btn btn-view" onclick="markAsRead()" style="display: none;">View Alerts</a>
            </div>
            
            <span class="username"><%= username %></span>
            <a href="/profile" class="icon-link">
                <i class="fa fa-user profile-icon"></i>
            </a>
            
            
        </div>
        <input type="hidden" id="userid" value="<%= userid %>">
    </nav>

    <script>
        // Ensure script runs after DOM is fully loaded
        document.addEventListener('DOMContentLoaded', () => {
            console.log('Script loaded and DOM fully parsed.');
            
            // Select all expandable links
            const expandableLinks = document.querySelectorAll('.expandable');
            console.log('Expandable links found:', expandableLinks);

            expandableLinks.forEach(link => {
                link.addEventListener('click', () => {
                    const submenu = link.nextElementSibling;
                    const arrow = link.querySelector('.arrow');

                    // Debugging logs
                    console.log('Clicked link:', link);
                    console.log('Submenu:', submenu);

                    if (submenu.style.display === 'block') {
                        submenu.style.display = 'none'; // Collapse submenu
                        arrow.textContent = 'â–¼'; // Down arrow
                    } else {
                        submenu.style.display = 'block'; // Expand submenu
                        arrow.textContent = 'â–²'; // Up arrow
                    }
                });
            });
        });
        document.addEventListener('DOMContentLoaded', () => {
            checkNotifications();
            setInterval(checkNotifications, 60000); // Auto-check every 1 min
        });

        // Ask for browser notification permission
        if (Notification.permission !== 'granted') {
            Notification.requestPermission();
        }

        async function checkNotifications() {
            try {
                const response = await fetch('/notification/check');
                const data = await response.json();

                const notificationMessage = document.getElementById("notificationMessage");
                const notificationDot = document.getElementById("notificationDot");
                const viewAlerts = document.getElementById("viewAlerts");

                if (data.success && data.alertCount > 0) {
                    notificationDot.style.display = "inline-block";
                    notificationMessage.innerHTML = `ðŸ”” ${data.message}`;
                    viewAlerts.style.display = "block";
                    viewAlerts.classList.remove("disabled");

                    // Show browser and sliding notification
                    if (Notification.permission === 'granted') {
                        new Notification('Stock Alert', { body: data.message });
                    }
                    showNotification(data.message);
                } else {
                    notificationDot.style.display = "none";
                    notificationMessage.innerHTML = "No new alerts";
                    viewAlerts.style.display = "block";
                    viewAlerts.classList.add("disabled");
                }
            } catch (error) {
                console.error("Error fetching notifications:", error);
            }
        }

        function toggleNotifications() {
            const dropdown = document.getElementById("notificationDropdown");
            
            // Toggle display
            dropdown.style.display = dropdown.style.display === "block" ? "none" : "block";

            // Ensure dropdown stays inside the screen
            const rect = dropdown.getBoundingClientRect();
            if (rect.right > window.innerWidth) {
                dropdown.style.left = "auto";
                dropdown.style.right = "10px"; // Move it inside the screen
            }
        }

        async function markAsRead() {
            await fetch('/notification/mark-as-read', { method: 'POST' });
            document.getElementById("notificationDot").style.display = "none";
        }

        // Function to show the animated notification
        function showNotification(message) {
            const popup = document.getElementById("notificationPopup");
            popup.innerHTML = `ðŸ”” ${message}`;
            popup.classList.add("show");

            // Hide notification after 6 seconds
            setTimeout(() => {
                popup.classList.remove("show");
            }, 6000);
        }

    </script>
</body>
</html>